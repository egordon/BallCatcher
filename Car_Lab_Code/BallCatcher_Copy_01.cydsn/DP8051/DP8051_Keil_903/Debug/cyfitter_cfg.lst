C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_903\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\2.1\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe .\Gene
                    -rated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_903\Debug\cyfitter_cfg.lst) CD DB
                    - NOIP OT(2,SIZE) INCDIR(Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_903\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 2.1 Component Pack 4
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2012, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          /* Clock startup error codes                                                   */
  25          #define CYCLOCKSTART_NO_ERROR    0
  26          #define CYCLOCKSTART_XTAL_ERROR  1
  27          #define CYCLOCKSTART_32KHZ_ERROR 2
  28          #define CYCLOCKSTART_PLL_ERROR   3
  29          
  30          /*******************************************************************************
  31          * Function Name: CyClockStartupError
  32          ********************************************************************************
  33          * Summary:
  34          *  If an error is encountered during clock configuration (crystal startup error,
  35          *  PLL lock error, etc) the system will end up here.  Unless reimplemented by 
  36          *  the customer, an infinite loop will be encountered.
  37          *
  38          * Parameters:  
  39          *   void
  40          *
  41          * Return:
  42          *   void
  43          *
  44          *******************************************************************************/
  45          #if defined(__GNUC__) || defined(__ARMCC_VERSION)
              __attribute__ ((unused))
              #endif
  48          static void CyClockStartupError(uint8 errorCode)
  49          {
  50   1          /* To remove the compiler warning if errorCode not used.                */
  51   1          errorCode = errorCode;
  52   1      
  53   1          /* `#START CyClockStartupError` */
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 2   

  54   1      
  55   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc)    */
  56   1          /* we will end up here to allow the customer to implement something to  */
  57   1          /* deal with the clock condition.                                       */
  58   1      
  59   1          /* `#END` */
  60   1      
  61   1          /* If nothing else, stop here since the clocks have not started         */
  62   1          /* correctly.                                                           */
  63   1          while(1) {}
  64   1      }
  65          
  66          
  67          #undef CYCODE
  68          #undef CYDATA
  69          #undef CYXDATA
  70          #undef CYFAR
  71          #if defined(__C51__) || defined(__CX51__)
  72                  #define CYCODE code
  73                  #define CYDATA data
  74                  #define CYXDATA xdata
  75                  #define CYFAR far
  76          
  77                  #define CYPACKED
  78                  #define CYALIGNED
  79              
  80                  #define CY_CFG_MEMORY_BARRIER()
  81          
  82                  #ifndef CYCONFIGCPY_DECLARED
                              extern void cymemzero(void CYFAR *addr, uint16 size);
                              extern void cyconfigcpy(uint16 size, const void CYFAR *src, void CYFAR *dest) small;
                              extern void cyconfigcpycode(uint16 size, const void CYCODE *src, void CYFAR *dest);
                      #endif
  87          
  88          
  89                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  90                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  91                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  92          #else
                      #error Unsupported toolchain
              #endif
  95          
  96          /* Defines the layout and meaning of each entry in the cfg_memset_list used for clearing registers */
  97          typedef struct {
  98                  void CYFAR *address;
  99                  uint16 size;
 100          } CYPACKED cfg_memset_t;
 101          
 102          /* Defines the layout and meaning of each entry in the cfg_memcpy_list used for initializing registers */
 103          typedef struct {
 104                  void CYFAR *dest;
 105                  const void CYFAR *src;
 106                  uint16 size;
 107          } CYPACKED cfg_memcpy_t;
 108          
 109          /* Contains the regions of memory that must be set to 0 during configuration */
 110          #define CFG_MEMSET_COUNT (sizeof(cfg_memset_list)/sizeof(*cfg_memset_list))
 111          static const cfg_memset_t CYCODE cfg_memset_list [] = {
 112                  /* address, size */
 113                  {(void CYFAR *)(CYREG_TMR0_CFG0), 48},
 114                  {(void CYFAR *)(CYREG_PRT4_DR), 16},
 115                  {(void CYFAR *)(CYREG_PRT6_DR), 16},
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 3   

 116                  {(void CYFAR *)(CYREG_PRT12_DR), 16},
 117                  {(void CYFAR *)(CYREG_PRT15_DR), 16},
 118                  {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096},
 119                  {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048},
 120                  {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560},
 121                  {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512},
 122                  {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32},
 123          };
 124          
 125          #define cfg_byte_table ((const void CYFAR *)0x080000)
 126          /* IOPINS0_0 Address: CYREG_PRT0_DM0 Size (bytes): 8 */
 127          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)0x00080650)
 128          
 129          /* IOPINS0_1 Address: CYREG_PRT1_DM0 Size (bytes): 8 */
 130          #define BS_IOPINS0_1_VAL ((const uint8 CYFAR *)0x00080658)
 131          
 132          /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
 133          #define BS_IOPINS0_2_VAL ((const uint8 CYFAR *)0x00080660)
 134          
 135          /* IOPINS0_3 Address: CYREG_PRT3_DM0 Size (bytes): 8 */
 136          #define BS_IOPINS0_3_VAL ((const uint8 CYFAR *)0x00080668)
 137          
 138          /* IOPINS0_5 Address: CYREG_PRT5_DM0 Size (bytes): 8 */
 139          #define BS_IOPINS0_5_VAL ((const uint8 CYFAR *)0x00080670)
 140          
 141          /* CYDEV_CLKDIST_ACFG0_CFG0 Address: CYREG_CLKDIST_ACFG0_CFG0 Size (bytes): 4 */
 142          #define BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL ((const uint8 CYFAR *)0x00080678)
 143          
 144          
 145          extern void cfg_write_bytes_code(void CYCODE *table);
 146          extern void cfg_write_bytes(void CYFAR *table);
 147          
 148          /*******************************************************************************
 149          * Function Name: ClockSetup
 150          ********************************************************************************
 151          *
 152          * Summary:
 153          *  Performs the initialization of all of the clocks in the device based on the
 154          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 155          *  clocks and setting the necessary dividers to produce the desired frequency. 
 156          *
 157          * Parameters:
 158          *  void
 159          *
 160          * Return:
 161          *  void
 162          *
 163          *******************************************************************************/
 164          static void ClockSetup(void)
 165          {
 166   1              reg32  timeout;
 167   1              reg32* timeout_p = &timeout;
 168   1              reg8   pllLock;
 169   1      
 170   1      
 171   1              /* Configure Digital Clocks based on settings from Clock DWR */
 172   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x180002);
 173   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x180017);
 174   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x180017);
 175   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG3_CFG0), 0x180017);
 176   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG4_CFG0), 0x180017);
 177   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG5_CFG0), 0x180017);
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 4   

 178   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG6_CFG0), 0x18009B);
 179   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG7_CFG0), 0x19EA5F);
 180   1      
 181   1              /* Configure Analog Clocks based on settings from Clock DWR */
 182   1              CYCONFIGCPY((void CYFAR *)(CYREG_CLKDIST_ACFG0_CFG0), (void CYFAR *)(BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL), 4)
             -;
 183   1      
 184   1              /* Configure ILO based on settings from Clock DWR */
 185   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02);
 186   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08);
 187   1      
 188   1              /* Configure IMO based on settings from Clock DWR */
 189   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03);
 190   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8(CYREG_FLSHID_CUST_TABLES_IMO_3MHZ)));
 191   1      
 192   1              /* Configure PLL based on settings from Clock DWR */
 193   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008);
 194   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1051);
 195   1              /* Wait up to 250us for the PLL to lock */
 196   1              pllLock = 0;
 197   1              for (timeout = 250 / 10; *timeout_p && (pllLock != 0x03u); timeout--) { 
 198   2                      pllLock = 0x03u & ((pllLock << 1) | ((CY_GET_REG8(CYREG_FASTCLK_PLL_SR) & 0x01u) >> 0));
 199   2                      CyDelayCycles(10 * 48); /* Delay 10us based on 48MHz clock */
 200   2              }
 201   1      
 202   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 203   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100);
 204   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07);
 205   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00);
 206   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48);
 207   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00);
 208   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02);
 209   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DLY1), 0x04);
 210   1      
 211   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8(CYREG_PM_ACT_CFG2) | 0xFF)));
 212   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG1), ((CY_GET_REG8(CYREG_PM_ACT_CFG1) | 0x01)));
 213   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG0), ((CY_GET_REG8(CYREG_PM_ACT_CFG0) | 0x80)));
 214   1      }
 215          
 216          
 217          /* Analog API Functions */
 218          
 219          /*******************************************************************************
 220          * Function Name: AnalogSetDefault
 221          ********************************************************************************
 222          *
 223          * Summary:
 224          *  Sets up the analog portions of the chip to default values based on chip
 225          *  configuration options from the project.
 226          *
 227          * Parameters:
 228          *  void
 229          *
 230          * Return:
 231          *  void
 232          *
 233          *******************************************************************************/
 234          void AnalogSetDefault(void)
 235          {
 236   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u);
 237   1              CY_SET_REG8(CYREG_BG_DFT0, bg_xover_inl_trim & 0x07u);
 238   1              CY_SET_REG8(CYREG_BG_DFT1, (bg_xover_inl_trim >> 4) & 0x0Fu);
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 5   

 239   1              CY_SET_REG8(CYREG_PRT5_AG, 0x02);
 240   1              CY_SET_REG8(CYREG_DSM0_SW0, 0x02);
 241   1              CY_SET_REG8(CYREG_BUS_SW0, 0x02);
 242   1              CY_SET_REG8(CYREG_PUMP_CR0, 0x44);
 243   1      }
 244          
 245          
 246          /*******************************************************************************
 247          * Function Name: SetAnalogRoutingPumps
 248          ********************************************************************************
 249          *
 250          * Summary:
 251          * Enables or disables the analog pumps feeding analog routing switches.
 252          * Intended to be called at startup, based on the Vdda system configuration;
 253          * may be called during operation when the user informs us that the Vdda voltage crossed the pump threshold
             -.
 254          *
 255          * Parameters:
 256          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 257          *
 258          * Return:
 259          *  void
 260          *
 261          *******************************************************************************/
 262          void SetAnalogRoutingPumps(uint8 enabled)
 263          {
 264   1              uint8 regValue = CY_GET_REG8(CYREG_PUMP_CR0);
 265   1              if (enabled)
 266   1                      regValue |= 0x02;
 267   1              else
 268   1                      regValue &= ~0x02;
 269   1              CY_SET_REG8(CYREG_PUMP_CR0, regValue);
 270   1      }
 271          
 272          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 273          /* Table used to specify registers used to implement ADC_AMux */
 274          uint8 CYXDATA * const CYCODE ADC_AMux__addrTable[] = {
 275                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 276                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 277          };
 278          
 279          /* Table used to define bit masks used to enable inputs for ADC_AMux */
 280          const uint8 CYCODE ADC_AMux__maskTable[] = {
 281                  0x40, 
 282                  0x40, 
 283          };
 284          
 285          /*******************************************************************************
 286          * Function Name: ADC_AMux_Set
 287          ********************************************************************************
 288          * Summary:
 289          *  This function is used to set a particular channel as active on the AMux.
 290          *
 291          * Parameters:  
 292          *   channel - The mux channel input to set as active
 293          *
 294          * Return:
 295          *   void
 296          *
 297          *******************************************************************************/
 298          void ADC_AMux_Set(uint8 channel)
 299          {
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 6   

 300   1              if (channel >= 2)
 301   1                      return;
 302   1              *ADC_AMux__addrTable[channel] |= ADC_AMux__maskTable[channel];
 303   1      }
 304          
 305          /*******************************************************************************
 306          * Function Name: ADC_AMux_Unset
 307          ********************************************************************************
 308          * Summary:
 309          *  This function is used to clear a particular channel from being active on the
 310          *  AMux.
 311          *
 312          * Parameters:  
 313          *   channel - The mux channel input to mark inactive
 314          *
 315          * Return:
 316          *   void
 317          *
 318          *******************************************************************************/
 319          void ADC_AMux_Unset(uint8 channel)
 320          {
 321   1              if (channel >= 2)
 322   1                      return;
 323   1              *ADC_AMux__addrTable[channel] &= ~ADC_AMux__maskTable[channel];
 324   1      }
 325          
 326          
 327          
 328          /*******************************************************************************
 329          * Function Name: cyfitter_cfg
 330          ********************************************************************************
 331          * Summary:
 332          *  This function is called by the start-up code for the selected device. It
 333          *  performs all of the necessary device configuration based on the design
 334          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 335          *  as Clocks and Pins as well as any component configuration that is necessary.
 336          *
 337          * Parameters:  
 338          *   void
 339          *
 340          * Return:
 341          *   void
 342          *
 343          *******************************************************************************/
 344          void cyfitter_cfg(void)
 345          {
 346   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 347   1              CY_SET_XTND_REG8(CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8(CYREG_MLOGIC_DEBUG) | 0x05));
 348   1      
 349   1              {
 350   2                      uint8 CYDATA i;
 351   2      
 352   2                      /* Zero out critical memory blocks before beginning configuration */
 353   2                      for (i = 0; i < CFG_MEMSET_COUNT; i++)
 354   2                      {
 355   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 356   3                              CYMEMZERO(ms->address, ms->size);
 357   3                      }
 358   2      
 359   2                      cfg_write_bytes(cfg_byte_table);
 360   2      
 361   2                      /* Enable digital routing */
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 7   

 362   2                      CY_SET_XTND_REG8(CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8(CYREG_BCTL0_BANK_CTL) | 0x02u);
 363   2                      CY_SET_XTND_REG8(CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8(CYREG_BCTL1_BANK_CTL) | 0x02u);
 364   2      
 365   2                      /* Enable UDB array */
 366   2                      CY_SET_REG8(CYREG_PM_ACT_CFG0, CY_GET_REG8(CYREG_PM_ACT_CFG0) | 0x40u);
 367   2                      CY_SET_REG8(CYREG_PM_AVAIL_CR2, CY_GET_REG8(CYREG_PM_AVAIL_CR2) | 0x10u);
 368   2              }
 369   1      
 370   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 371   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DM0), (void CYFAR *)(BS_IOPINS0_0_VAL), 8);
 372   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT1_DM0), (void CYFAR *)(BS_IOPINS0_1_VAL), 8);
 373   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT2_DM0), (void CYFAR *)(BS_IOPINS0_2_VAL), 8);
 374   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT3_DM0), (void CYFAR *)(BS_IOPINS0_3_VAL), 8);
 375   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT5_DM0), (void CYFAR *)(BS_IOPINS0_5_VAL), 8);
 376   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01);
 377   1      
 378   1              if (CYDEV_CHIP_REV_ACTUAL < 5)
 379   1              {
 380   2                      CY_SET_REG8(CYDEV_MFGCFG_PWRSYS_WAKE_TR2, 0x3A);
 381   2              }
 382   1      
 383   1      
 384   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 385   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), ((CYDEV_INSTRUCT_CACHE_ENABLED) ? 0xF1 : 0xC0));
 386   1              /* Setup clocks based on selections from Clock DWR */
 387   1              ClockSetup();
 388   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 389   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), ((CYDEV_INSTRUCT_CACHE_ENABLED) ? 0xB1 : 0x80));
 390   1      
 391   1              /* Perform basic analog initialization to defaults */
 392   1              AnalogSetDefault();
 393   1      
 394   1              /* Configure alternate active mode */
 395   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (void CYFAR *)CYDEV_PM_ACT_BASE, 14);
 396   1              CY_SET_REG8(CYREG_PM_STBY_CFG0, CY_GET_REG8(CYREG_PM_STBY_CFG0) & ~0x02u);      /* Disable CPU */
 397   1      }
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 48
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 51
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 63
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 164
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 167
0000 7E00        R     MOV     R6,#HIGH timeout
0002 7F00        R     MOV     R7,#LOW timeout
0004 900000      R     MOV     DPTR,#timeout_p
0007 EE                MOV     A,R6
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A EF                MOV     A,R7
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 172
000C 7B00              MOV     R3,#00H
000E 7A40              MOV     R2,#040H
0010 7980              MOV     R1,#080H
0012 7F02              MOV     R7,#02H
0014 7E00              MOV     R6,#00H
0016 7D18              MOV     R5,#018H
0018 7C00              MOV     R4,#00H
001A 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 173
001D 7B00              MOV     R3,#00H
001F 7A40              MOV     R2,#040H
0021 7984              MOV     R1,#084H
0023 7F17              MOV     R7,#017H
0025 7E00              MOV     R6,#00H
0027 7D18              MOV     R5,#018H
0029 7C00              MOV     R4,#00H
002B 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 174
002E 7B00              MOV     R3,#00H
0030 7A40              MOV     R2,#040H
0032 7988              MOV     R1,#088H
0034 7F17              MOV     R7,#017H
0036 7E00              MOV     R6,#00H
0038 7D18              MOV     R5,#018H
003A 7C00              MOV     R4,#00H
003C 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 175
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 9   

003F 7B00              MOV     R3,#00H
0041 7A40              MOV     R2,#040H
0043 798C              MOV     R1,#08CH
0045 7F17              MOV     R7,#017H
0047 7E00              MOV     R6,#00H
0049 7D18              MOV     R5,#018H
004B 7C00              MOV     R4,#00H
004D 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 176
0050 7B00              MOV     R3,#00H
0052 7A40              MOV     R2,#040H
0054 7990              MOV     R1,#090H
0056 7F17              MOV     R7,#017H
0058 7E00              MOV     R6,#00H
005A 7D18              MOV     R5,#018H
005C 7C00              MOV     R4,#00H
005E 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 177
0061 7B00              MOV     R3,#00H
0063 7A40              MOV     R2,#040H
0065 7994              MOV     R1,#094H
0067 7F17              MOV     R7,#017H
0069 7E00              MOV     R6,#00H
006B 7D18              MOV     R5,#018H
006D 7C00              MOV     R4,#00H
006F 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 178
0072 7B00              MOV     R3,#00H
0074 7A40              MOV     R2,#040H
0076 7998              MOV     R1,#098H
0078 7F9B              MOV     R7,#09BH
007A 7E00              MOV     R6,#00H
007C 7D18              MOV     R5,#018H
007E 7C00              MOV     R4,#00H
0080 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 179
0083 7B00              MOV     R3,#00H
0085 7A40              MOV     R2,#040H
0087 799C              MOV     R1,#09CH
0089 7F5F              MOV     R7,#05FH
008B 7EEA              MOV     R6,#0EAH
008D 7D19              MOV     R5,#019H
008F 7C00              MOV     R4,#00H
0091 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 182
0094 7B08              MOV     R3,#08H
0096 7A06              MOV     R2,#06H
0098 7978              MOV     R1,#078H
009A C003              PUSH    AR3
009C C002              PUSH    AR2
009E C001              PUSH    AR1
00A0 7B00              MOV     R3,#00H
00A2 7A41              MOV     R2,#041H
00A4 7900              MOV     R1,#00H
00A6 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00A9 120000      E     LCALL   ?C?PSTXDATA
00AC D001              POP     AR1
00AE D002              POP     AR2
00B0 D003              POP     AR3
00B2 7F04              MOV     R7,#04H
00B4 7E00              MOV     R6,#00H
00B6 120000      E     LCALL   _cyconfigcpy
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 10  

                                           ; SOURCE LINE # 185
00B9 904300            MOV     DPTR,#04300H
00BC 7402              MOV     A,#02H
00BE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 186
00BF 904000            MOV     DPTR,#04000H
00C2 7408              MOV     A,#08H
00C4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 189
00C5 904200            MOV     DPTR,#04200H
00C8 7403              MOV     A,#03H
00CA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 190
00CB 7B0C              MOV     R3,#0CH
00CD 7A01              MOV     R2,#01H
00CF 7908              MOV     R1,#08H
00D1 120000      E     LCALL   _cyread8
00D4 9046A1            MOV     DPTR,#046A1H
00D7 EF                MOV     A,R7
00D8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 193
00D9 7B00              MOV     R3,#00H
00DB 7A42              MOV     R2,#042H
00DD 7922              MOV     R1,#022H
00DF 7D08              MOV     R5,#08H
00E1 7C00              MOV     R4,#00H
00E3 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 194
00E6 7B00              MOV     R3,#00H
00E8 7A42              MOV     R2,#042H
00EA 7920              MOV     R1,#020H
00EC 7D51              MOV     R5,#051H
00EE 7C10              MOV     R4,#010H
00F0 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 196
00F3 900000      R     MOV     DPTR,#pllLock
00F6 E4                CLR     A
00F7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 197
00F8 7F19              MOV     R7,#019H
00FA 7E00              MOV     R6,#00H
00FC 7D00              MOV     R5,#00H
00FE 7C00              MOV     R4,#00H
0100 900000      R     MOV     DPTR,#timeout
0103 120000      E     LCALL   ?C?LSTXDATA
0106         ?C0004:
0106 900000      R     MOV     DPTR,#timeout_p
0109 E0                MOVX    A,@DPTR
010A FE                MOV     R6,A
010B A3                INC     DPTR
010C E0                MOVX    A,@DPTR
010D FF                MOV     R7,A
010E 8F82              MOV     DPL,R7
0110 8E83              MOV     DPH,R6
0112 120000      E     LCALL   ?C?LLDXDATA
0115 EC                MOV     A,R4
0116 4D                ORL     A,R5
0117 4E                ORL     A,R6
0118 4F                ORL     A,R7
0119 604E              JZ      ?C0005
011B 900000      R     MOV     DPTR,#pllLock
011E E0                MOVX    A,@DPTR
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 11  

011F FF                MOV     R7,A
0120 EF                MOV     A,R7
0121 6403              XRL     A,#03H
0123 6044              JZ      ?C0005
                                           ; SOURCE LINE # 198
0125 904225            MOV     DPTR,#04225H
0128 E0                MOVX    A,@DPTR
0129 FF                MOV     R7,A
012A EF                MOV     A,R7
012B 5401              ANL     A,#01H
012D FF                MOV     R7,A
012E 7E00              MOV     R6,#00H
0130 900000      R     MOV     DPTR,#pllLock
0133 E0                MOVX    A,@DPTR
0134 FE                MOV     R6,A
0135 EE                MOV     A,R6
0136 25E0              ADD     A,ACC
0138 FE                MOV     R6,A
0139 EE                MOV     A,R6
013A 4F                ORL     A,R7
013B FF                MOV     R7,A
013C EF                MOV     A,R7
013D 5403              ANL     A,#03H
013F FF                MOV     R7,A
0140 900000      R     MOV     DPTR,#pllLock
0143 EF                MOV     A,R7
0144 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 199
0145 7FE0              MOV     R7,#0E0H
0147 7E01              MOV     R6,#01H
0149 7D00              MOV     R5,#00H
014B 7C00              MOV     R4,#00H
014D 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 200
0150 900000      R     MOV     DPTR,#timeout
0153 120000      E     LCALL   ?C?LLDXDATA
0156 7BFF              MOV     R3,#0FFH
0158 7AFF              MOV     R2,#0FFH
015A 79FF              MOV     R1,#0FFH
015C 78FF              MOV     R0,#0FFH
015E 120000      E     LCALL   ?C?LADD
0161 900000      R     MOV     DPTR,#timeout
0164 120000      E     LCALL   ?C?LSTXDATA
0167 809D              SJMP    ?C0004
0169         ?C0005:
                                           ; SOURCE LINE # 203
0169 7B00              MOV     R3,#00H
016B 7A40              MOV     R2,#040H
016D 7904              MOV     R1,#04H
016F 7D00              MOV     R5,#00H
0171 7C01              MOV     R4,#01H
0173 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 204
0176 904004            MOV     DPTR,#04004H
0179 7407              MOV     A,#07H
017B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 205
017C 904006            MOV     DPTR,#04006H
017F E4                CLR     A
0180 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 206
0181 904008            MOV     DPTR,#04008H
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 12  

0184 7448              MOV     A,#048H
0186 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 207
0187 904004            MOV     DPTR,#04004H
018A E4                CLR     A
018B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 208
018C 904001            MOV     DPTR,#04001H
018F 7402              MOV     A,#02H
0191 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 209
0192 90400B            MOV     DPTR,#0400BH
0195 7404              MOV     A,#04H
0197 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 211
0198 9043A2            MOV     DPTR,#043A2H
019B E0                MOVX    A,@DPTR
019C FF                MOV     R7,A
019D EF                MOV     A,R7
019E 44FF              ORL     A,#0FFH
01A0 FF                MOV     R7,A
01A1 EF                MOV     A,R7
01A2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 212
01A3 9043A1            MOV     DPTR,#043A1H
01A6 E0                MOVX    A,@DPTR
01A7 FF                MOV     R7,A
01A8 EF                MOV     A,R7
01A9 4401              ORL     A,#01H
01AB FF                MOV     R7,A
01AC EF                MOV     A,R7
01AD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 213
01AE 9043A0            MOV     DPTR,#043A0H
01B1 E0                MOVX    A,@DPTR
01B2 FF                MOV     R7,A
01B3 EF                MOV     A,R7
01B4 4480              ORL     A,#080H
01B6 FF                MOV     R7,A
01B7 EF                MOV     A,R7
01B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 214
01B9 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 234
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 236
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 237
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 13  

0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 238
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 239
002F 90515D            MOV     DPTR,#0515DH
0032 7402              MOV     A,#02H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 240
0035 905B00            MOV     DPTR,#05B00H
0038 7402              MOV     A,#02H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 241
003B 905B58            MOV     DPTR,#05B58H
003E 7402              MOV     A,#02H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 242
0041 905876            MOV     DPTR,#05876H
0044 7444              MOV     A,#044H
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 243
0047 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 262
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 263
                                           ; SOURCE LINE # 264
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 265
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0009
                                           ; SOURCE LINE # 266
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 14  

001D 4402              ORL     A,#02H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
0025 800E              SJMP    ?C0010
0027         ?C0009:
                                           ; SOURCE LINE # 268
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54FD              ANL     A,#0FDH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
0035         ?C0010:
                                           ; SOURCE LINE # 269
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 270
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION _ADC_AMux_Set (BEGIN)
                                           ; SOURCE LINE # 298
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 299
                                           ; SOURCE LINE # 300
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5036              JNC     ?C0013
0010         ?C0012:
                                           ; SOURCE LINE # 302
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW ADC_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH ADC_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 15  

002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#ADC_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EF                MOV     A,R7
003E 4E                ORL     A,R6
003F FF                MOV     R7,A
0040 D082              POP     DPL
0042 D083              POP     DPH
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 303
0046         ?C0013:
0046 22                RET     
             ; FUNCTION _ADC_AMux_Set (END)

             ; FUNCTION _ADC_AMux_Unset (BEGIN)
                                           ; SOURCE LINE # 319
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 320
                                           ; SOURCE LINE # 321
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5039              JNC     ?C0015
0010         ?C0014:
                                           ; SOURCE LINE # 323
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW ADC_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH ADC_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 16  

0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#ADC_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EE                MOV     A,R6
003E F4                CPL     A
003F FE                MOV     R6,A
0040 EF                MOV     A,R7
0041 5E                ANL     A,R6
0042 FF                MOV     R7,A
0043 D082              POP     DPL
0045 D083              POP     DPH
0047 EF                MOV     A,R7
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 324
0049         ?C0015:
0049 22                RET     
             ; FUNCTION _ADC_AMux_Unset (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 344
                                           ; SOURCE LINE # 345
                                           ; SOURCE LINE # 347
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 349
                                           ; SOURCE LINE # 353
0016 750000      R     MOV     i,#00H
0019         ?C0016:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 940A              SUBB    A,#0AH
001E 503A              JNC     ?C0017
                                           ; SOURCE LINE # 354
                                           ; SOURCE LINE # 355
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 356
0038 AE00        R     MOV     R6,ms
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 17  

003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 357
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0016
005A         ?C0017:
                                           ; SOURCE LINE # 359
005A 7B08              MOV     R3,#08H
005C 7A00              MOV     R2,#00H
005E 7900              MOV     R1,#00H
0060 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 362
0063 7B01              MOV     R3,#01H
0065 7A50              MOV     R2,#050H
0067 7903              MOV     R1,#03H
0069 120000      E     LCALL   _cyread8
006C EF                MOV     A,R7
006D 4402              ORL     A,#02H
006F FD                MOV     R5,A
0070 7B01              MOV     R3,#01H
0072 7A50              MOV     R2,#050H
0074 7903              MOV     R1,#03H
0076 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 363
0079 7B01              MOV     R3,#01H
007B 7A50              MOV     R2,#050H
007D 7913              MOV     R1,#013H
007F 120000      E     LCALL   _cyread8
0082 EF                MOV     A,R7
0083 4402              ORL     A,#02H
0085 FD                MOV     R5,A
0086 7B01              MOV     R3,#01H
0088 7A50              MOV     R2,#050H
008A 7913              MOV     R1,#013H
008C 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 366
008F 9043A0            MOV     DPTR,#043A0H
0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 EF                MOV     A,R7
0095 4440              ORL     A,#040H
0097 FF                MOV     R7,A
0098 9043A0            MOV     DPTR,#043A0H
009B EF                MOV     A,R7
009C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 367
009D 9043C2            MOV     DPTR,#043C2H
00A0 E0                MOVX    A,@DPTR
00A1 FF                MOV     R7,A
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 18  

00A2 EF                MOV     A,R7
00A3 4410              ORL     A,#010H
00A5 FF                MOV     R7,A
00A6 9043C2            MOV     DPTR,#043C2H
00A9 EF                MOV     A,R7
00AA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 368
                                           ; SOURCE LINE # 371
00AB 7B08              MOV     R3,#08H
00AD 7A06              MOV     R2,#06H
00AF 7950              MOV     R1,#050H
00B1 C003              PUSH    AR3
00B3 C002              PUSH    AR2
00B5 C001              PUSH    AR1
00B7 7B00              MOV     R3,#00H
00B9 7A51              MOV     R2,#051H
00BB 7902              MOV     R1,#02H
00BD 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C0 120000      E     LCALL   ?C?PSTXDATA
00C3 D001              POP     AR1
00C5 D002              POP     AR2
00C7 D003              POP     AR3
00C9 7F08              MOV     R7,#08H
00CB 7E00              MOV     R6,#00H
00CD 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 372
00D0 7B08              MOV     R3,#08H
00D2 7A06              MOV     R2,#06H
00D4 7958              MOV     R1,#058H
00D6 C003              PUSH    AR3
00D8 C002              PUSH    AR2
00DA C001              PUSH    AR1
00DC 7B00              MOV     R3,#00H
00DE 7A51              MOV     R2,#051H
00E0 7912              MOV     R1,#012H
00E2 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00E5 120000      E     LCALL   ?C?PSTXDATA
00E8 D001              POP     AR1
00EA D002              POP     AR2
00EC D003              POP     AR3
00EE 7F08              MOV     R7,#08H
00F0 7E00              MOV     R6,#00H
00F2 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 373
00F5 7B08              MOV     R3,#08H
00F7 7A06              MOV     R2,#06H
00F9 7960              MOV     R1,#060H
00FB C003              PUSH    AR3
00FD C002              PUSH    AR2
00FF C001              PUSH    AR1
0101 7B00              MOV     R3,#00H
0103 7A51              MOV     R2,#051H
0105 7922              MOV     R1,#022H
0107 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
010A 120000      E     LCALL   ?C?PSTXDATA
010D D001              POP     AR1
010F D002              POP     AR2
0111 D003              POP     AR3
0113 7F08              MOV     R7,#08H
0115 7E00              MOV     R6,#00H
0117 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 374
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 19  

011A 7B08              MOV     R3,#08H
011C 7A06              MOV     R2,#06H
011E 7968              MOV     R1,#068H
0120 C003              PUSH    AR3
0122 C002              PUSH    AR2
0124 C001              PUSH    AR1
0126 7B00              MOV     R3,#00H
0128 7A51              MOV     R2,#051H
012A 7932              MOV     R1,#032H
012C 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
012F 120000      E     LCALL   ?C?PSTXDATA
0132 D001              POP     AR1
0134 D002              POP     AR2
0136 D003              POP     AR3
0138 7F08              MOV     R7,#08H
013A 7E00              MOV     R6,#00H
013C 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 375
013F 7B08              MOV     R3,#08H
0141 7A06              MOV     R2,#06H
0143 7970              MOV     R1,#070H
0145 C003              PUSH    AR3
0147 C002              PUSH    AR2
0149 C001              PUSH    AR1
014B 7B00              MOV     R3,#00H
014D 7A51              MOV     R2,#051H
014F 7952              MOV     R1,#052H
0151 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0154 120000      E     LCALL   ?C?PSTXDATA
0157 D001              POP     AR1
0159 D002              POP     AR2
015B D003              POP     AR3
015D 7F08              MOV     R7,#08H
015F 7E00              MOV     R6,#00H
0161 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 376
0164 9044F4            MOV     DPTR,#044F4H
0167 7401              MOV     A,#01H
0169 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 378
016A 9046EC            MOV     DPTR,#046ECH
016D E0                MOVX    A,@DPTR
016E FF                MOV     R7,A
016F EF                MOV     A,R7
0170 C3                CLR     C
0171 9405              SUBB    A,#05H
0173 5006              JNC     ?C0019
                                           ; SOURCE LINE # 379
                                           ; SOURCE LINE # 380
0175 904689            MOV     DPTR,#04689H
0178 743A              MOV     A,#03AH
017A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 381
017B         ?C0019:
                                           ; SOURCE LINE # 385
017B 904800            MOV     DPTR,#04800H
017E 74F1              MOV     A,#0F1H
0180 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 387
0181 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 389
0184 904800            MOV     DPTR,#04800H
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/02/2016 22:50:20 PAGE 20  

0187 74B1              MOV     A,#0B1H
0189 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 392
018A 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 395
018D 7B00              MOV     R3,#00H
018F 7A43              MOV     R2,#043H
0191 79A0              MOV     R1,#0A0H
0193 C003              PUSH    AR3
0195 C002              PUSH    AR2
0197 C001              PUSH    AR1
0199 7B00              MOV     R3,#00H
019B 7A43              MOV     R2,#043H
019D 79B0              MOV     R1,#0B0H
019F 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
01A2 120000      E     LCALL   ?C?PSTXDATA
01A5 D001              POP     AR1
01A7 D002              POP     AR2
01A9 D003              POP     AR3
01AB 7F0E              MOV     R7,#0EH
01AD 7E00              MOV     R6,#00H
01AF 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 396
01B2 9043B0            MOV     DPTR,#043B0H
01B5 E0                MOVX    A,@DPTR
01B6 FF                MOV     R7,A
01B7 EF                MOV     A,R7
01B8 54FD              ANL     A,#0FDH
01BA FF                MOV     R7,A
01BB 9043B0            MOV     DPTR,#043B0H
01BE EF                MOV     A,R7
01BF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 397
01C0 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1190    ----
   CONSTANT SIZE    =     56    ----
   XDATA SIZE       =   ----      13
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
